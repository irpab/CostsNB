<?xml version="1.0"?>
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">
<xsl:output method="text" indent="yes"/>

<xsl:template match="/">
  <xsl:text>#include &#60;netdb.h&#62;&#10;</xsl:text>
  <xsl:text>#include &#60;stdint.h&#62;&#10;</xsl:text>
  <xsl:text>#include &#60;arpa/inet.h&#62;&#10;</xsl:text>
  <xsl:text>&#10;</xsl:text>
  <xsl:text>&#10;// This file was autogenerated&#10;</xsl:text>
  <xsl:text>#include "costsnb_clisrv_structs.h"&#10;</xsl:text>
  <xsl:text>#include "costsnb_clisrv_opcodes.h"&#10;</xsl:text>
  <xsl:text>&#10;</xsl:text>
  <xsl:text>App_message *Parse_message(char *buf) {&#10;</xsl:text>
  <xsl:text>  uint16_t opcode = *((uint16_t*)(buf));&#10;</xsl:text>
  <xsl:text>  opcode = ntohs(opcode);&#10;</xsl:text>
  <xsl:text>  switch (opcode) {&#10;</xsl:text>
  <xsl:apply-templates select="messages"/>
  <xsl:text>  default:&#10;</xsl:text>
  <xsl:text>    return nullptr;&#10;</xsl:text>
  <xsl:text>  };&#10;</xsl:text>
  <xsl:text>  return nullptr;&#10;</xsl:text>
  <xsl:text>}&#10;</xsl:text>
</xsl:template>

<xsl:template match="messages">
  <xsl:apply-templates select="message"/>
</xsl:template>

<xsl:template match="message"> 
  <xsl:text>  case </xsl:text><xsl:value-of select="opcode"/><xsl:text>: {&#10;</xsl:text>
  <xsl:text>    </xsl:text><xsl:value-of select="name"/><xsl:text> *msg = new </xsl:text><xsl:value-of select="name"/><xsl:text>();&#10;</xsl:text>
  <xsl:text>    std::memcpy(msg, buf, sizeof(</xsl:text><xsl:value-of select="name"/><xsl:text>));&#10;</xsl:text>
  <xsl:text>    msg->opcode = opcode;&#10;</xsl:text>
  <xsl:apply-templates select="fields"/>
  <xsl:text>    return msg;&#10;</xsl:text>
  <xsl:text>  }&#10;</xsl:text>
</xsl:template>

<xsl:template match="fields">
  <xsl:apply-templates select="field"/>
</xsl:template>

<xsl:template match="field">
  <xsl:if test="not (array)">
    <xsl:text>    msg-></xsl:text>
    <xsl:value-of select="name"/>
    <xsl:text> = </xsl:text>
    <xsl:choose> 
      <xsl:when test="size='16'">
        <xsl:text>ntohs</xsl:text>
      </xsl:when>
      <xsl:when test="size='32'">
        <xsl:text>ntohl</xsl:text>
      </xsl:when>
    </xsl:choose>
    <xsl:text>(msg-></xsl:text>
    <xsl:value-of select="name"/>
    <xsl:text>);&#10;</xsl:text>
  </xsl:if>
</xsl:template>

</xsl:stylesheet>
